/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import com.mongodb.MongoClient;
import com.mongodb.MongoException;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import java.awt.Color;
import javax.swing.JOptionPane;
import org.bson.Document;

/**
 *
 * @author ISAI
 */
public class Prestamo extends javax.swing.JPanel {

    /**
     * Creates new form EstadisticaBiblioteca
     */
    public Prestamo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPFondo = new javax.swing.JPanel();
        jPTitulo = new javax.swing.JPanel();
        LbTitulo = new javax.swing.JLabel();
        jPOpciones = new javax.swing.JPanel();
        jPActualizar = new javax.swing.JPanel();
        jLbAceptar = new javax.swing.JLabel();
        jPBuscar = new javax.swing.JPanel();
        jLbBuscar = new javax.swing.JLabel();
        jPUsuario = new javax.swing.JPanel();
        jLbCorreo = new javax.swing.JLabel();
        jLbNombre = new javax.swing.JLabel();
        jLbApellido = new javax.swing.JLabel();
        jLbCedula = new javax.swing.JLabel();
        jLbPerfil = new javax.swing.JLabel();
        jLbDirecion = new javax.swing.JLabel();
        jLbMostrarPerfil = new javax.swing.JLabel();
        jLbMostrarNombre = new javax.swing.JLabel();
        jLbMostrarApellido = new javax.swing.JLabel();
        jLbMostrarCedula = new javax.swing.JLabel();
        jLbMostrarCorreo = new javax.swing.JLabel();
        jLbMostrarDirecion = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPLibro = new javax.swing.JPanel();
        jLbTitulo = new javax.swing.JLabel();
        jLbAutor = new javax.swing.JLabel();
        jLbGenero = new javax.swing.JLabel();
        jLbEditorial = new javax.swing.JLabel();
        jLbAnioPublicacion = new javax.swing.JLabel();
        jLbEdicion = new javax.swing.JLabel();
        jLbMostraEdicion = new javax.swing.JLabel();
        jLbMostrarAnioPublicacion = new javax.swing.JLabel();
        jLbMostrarEditorial = new javax.swing.JLabel();
        jLbMostrarGenero = new javax.swing.JLabel();
        jLbMostrarAutor = new javax.swing.JLabel();
        jLbMostrarTitulo = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLbCedulaBuscar = new javax.swing.JLabel();
        jTxtCedulaBuscar = new javax.swing.JTextField();
        jLbIDBuscar = new javax.swing.JLabel();
        jTxtBuscarID = new javax.swing.JTextField();
        jLbNombreBuscar = new javax.swing.JLabel();
        jTxtNombreBuscar = new javax.swing.JTextField();
        jLbTituloBuscar = new javax.swing.JLabel();
        jTxtBuscarTitulo = new javax.swing.JTextField();

        jPFondo.setBackground(new java.awt.Color(255, 255, 255));
        jPFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPTitulo.setBackground(new java.awt.Color(0, 0, 204));

        LbTitulo.setForeground(new java.awt.Color(255, 255, 255));
        LbTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LbTitulo.setText("PRESTAMOS");

        javax.swing.GroupLayout jPTituloLayout = new javax.swing.GroupLayout(jPTitulo);
        jPTitulo.setLayout(jPTituloLayout);
        jPTituloLayout.setHorizontalGroup(
            jPTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LbTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );
        jPTituloLayout.setVerticalGroup(
            jPTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LbTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        jPFondo.add(jPTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, -1));

        jPOpciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLbAceptar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbAceptar.setText("ACEPTAR");
        jLbAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLbAceptarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLbAceptarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLbAceptarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPActualizarLayout = new javax.swing.GroupLayout(jPActualizar);
        jPActualizar.setLayout(jPActualizarLayout);
        jPActualizarLayout.setHorizontalGroup(
            jPActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLbAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPActualizarLayout.setVerticalGroup(
            jPActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLbAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPOpciones.add(jPActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 100, 60));

        jLbBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbBuscar.setText("BUSCAR");
        jLbBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLbBuscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLbBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLbBuscarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPBuscarLayout = new javax.swing.GroupLayout(jPBuscar);
        jPBuscar.setLayout(jPBuscarLayout);
        jPBuscarLayout.setHorizontalGroup(
            jPBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLbBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );
        jPBuscarLayout.setVerticalGroup(
            jPBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLbBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPOpciones.add(jPBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 60));

        jPFondo.add(jPOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 490, 60));

        jPUsuario.setBackground(new java.awt.Color(255, 255, 255));
        jPUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Usuario"));
        jPUsuario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLbCorreo.setText("CORREO:");
        jPUsuario.add(jLbCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLbNombre.setText("NOMBRE:");
        jPUsuario.add(jLbNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLbApellido.setText("APELLIDO:");
        jPUsuario.add(jLbApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLbCedula.setText("CEDULA:");
        jPUsuario.add(jLbCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLbPerfil.setText("PERFIL: ");
        jPUsuario.add(jLbPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLbDirecion.setText("DIRECCION:");
        jPUsuario.add(jLbDirecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
        jPUsuario.add(jLbMostrarPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 70, -1));
        jPUsuario.add(jLbMostrarNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 70, -1));
        jPUsuario.add(jLbMostrarApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 70, -1));
        jPUsuario.add(jLbMostrarCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 70, -1));
        jPUsuario.add(jLbMostrarCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 70, -1));
        jPUsuario.add(jLbMostrarDirecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 70, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPUsuario.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 10, 120));

        jPFondo.add(jPUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 190, 150));

        jPLibro.setBackground(new java.awt.Color(255, 255, 255));
        jPLibro.setBorder(javax.swing.BorderFactory.createTitledBorder("Dato del Libro"));
        jPLibro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLbTitulo.setText("TÍTULO:");
        jPLibro.add(jLbTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLbAutor.setText("AUTOR:");
        jPLibro.add(jLbAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLbGenero.setText("GÉNERO:");
        jPLibro.add(jLbGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLbEditorial.setText("EDITORIAL:");
        jPLibro.add(jLbEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLbAnioPublicacion.setText("AÑO DE PUBLICACION:");
        jPLibro.add(jLbAnioPublicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLbEdicion.setText("EDICION:");
        jPLibro.add(jLbEdicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
        jPLibro.add(jLbMostraEdicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 70, -1));
        jPLibro.add(jLbMostrarAnioPublicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 70, -1));
        jPLibro.add(jLbMostrarEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 70, -1));
        jPLibro.add(jLbMostrarGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 70, -1));
        jPLibro.add(jLbMostrarAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 70, -1));
        jPLibro.add(jLbMostrarTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 70, -1));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPLibro.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 10, 120));

        jPFondo.add(jPLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 250, 150));

        jLbCedulaBuscar.setText("CEDULA:");
        jPFondo.add(jLbCedulaBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));
        jPFondo.add(jTxtCedulaBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 70, -1));

        jLbIDBuscar.setText("ID:");
        jPFondo.add(jLbIDBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));
        jPFondo.add(jTxtBuscarID, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 70, -1));

        jLbNombreBuscar.setText("NOMBRE:");
        jPFondo.add(jLbNombreBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, -1, -1));
        jPFondo.add(jTxtNombreBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 70, -1));

        jLbTituloBuscar.setText("TÍTULO:");
        jPFondo.add(jLbTituloBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, -1));
        jPFondo.add(jTxtBuscarTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 80, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLbAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLbAceptarMouseClicked
        RealizarPrestamo obRealizarPrestamo =new RealizarPrestamo();
        obRealizarPrestamo.setVisible(true);
        obRealizarPrestamo.setLocationRelativeTo(null);
    }//GEN-LAST:event_jLbAceptarMouseClicked

    private void jLbAceptarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLbAceptarMouseEntered
        jPActualizar.setBackground(new Color(255, 255, 204));
    }//GEN-LAST:event_jLbAceptarMouseEntered

    private void jLbAceptarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLbAceptarMouseExited
        jPActualizar.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_jLbAceptarMouseExited

    private void jLbBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLbBuscarMouseClicked
        try {
            MongoClient mongo=new MongoClient("localhost",27017);
            MongoDatabase database= mongo.getDatabase("BIBLIOTECA_VIRTUAL");
            MongoCollection<Document> collect=database.getCollection("USUARIOS_REGISTRADOS");
            buscarUsuario(collect);
            MongoCollection<Document> collect2=database.getCollection("LIBROS_REGISTRADOS");
            buscarLibro(collect2);
        } catch (MongoException e) {
            JOptionPane.showMessageDialog(null, "ERROR A LA CONECTION A MONGODB");
        }
    }//GEN-LAST:event_jLbBuscarMouseClicked

    private void jLbBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLbBuscarMouseEntered
        jPBuscar.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_jLbBuscarMouseEntered

    private void jLbBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLbBuscarMouseExited
        jPBuscar.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_jLbBuscarMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LbTitulo;
    private javax.swing.JLabel jLbAceptar;
    private javax.swing.JLabel jLbAnioPublicacion;
    private javax.swing.JLabel jLbApellido;
    private javax.swing.JLabel jLbAutor;
    private javax.swing.JLabel jLbBuscar;
    private javax.swing.JLabel jLbCedula;
    private javax.swing.JLabel jLbCedulaBuscar;
    private javax.swing.JLabel jLbCorreo;
    private javax.swing.JLabel jLbDirecion;
    private javax.swing.JLabel jLbEdicion;
    private javax.swing.JLabel jLbEditorial;
    private javax.swing.JLabel jLbGenero;
    private javax.swing.JLabel jLbIDBuscar;
    private javax.swing.JLabel jLbMostraEdicion;
    private javax.swing.JLabel jLbMostrarAnioPublicacion;
    private javax.swing.JLabel jLbMostrarApellido;
    private javax.swing.JLabel jLbMostrarAutor;
    private javax.swing.JLabel jLbMostrarCedula;
    private javax.swing.JLabel jLbMostrarCorreo;
    private javax.swing.JLabel jLbMostrarDirecion;
    private javax.swing.JLabel jLbMostrarEditorial;
    private javax.swing.JLabel jLbMostrarGenero;
    private javax.swing.JLabel jLbMostrarNombre;
    private javax.swing.JLabel jLbMostrarPerfil;
    private javax.swing.JLabel jLbMostrarTitulo;
    private javax.swing.JLabel jLbNombre;
    private javax.swing.JLabel jLbNombreBuscar;
    private javax.swing.JLabel jLbPerfil;
    private javax.swing.JLabel jLbTitulo;
    private javax.swing.JLabel jLbTituloBuscar;
    private javax.swing.JPanel jPActualizar;
    private javax.swing.JPanel jPBuscar;
    private javax.swing.JPanel jPFondo;
    private javax.swing.JPanel jPLibro;
    private javax.swing.JPanel jPOpciones;
    private javax.swing.JPanel jPTitulo;
    private javax.swing.JPanel jPUsuario;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTxtBuscarID;
    private javax.swing.JTextField jTxtBuscarTitulo;
    private javax.swing.JTextField jTxtCedulaBuscar;
    private javax.swing.JTextField jTxtNombreBuscar;
    // End of variables declaration//GEN-END:variables
    private void buscarLibro(MongoCollection<Document> collect){
        int opcion=0,id=1,titulo2=2,ambos=3;
        String ID=jTxtBuscarID.getText();
        String titulo=jTxtBuscarTitulo.getText();
        if (ID.equals("") && titulo.equals("")) {
            opcion = 0; // Ambos campos están vacíos
        } else if (ID.equals("") && !titulo.equals("")) {
            opcion = titulo2; // Buscar por título
        } else if (!ID.equals("") && titulo.equals("")) {
            opcion = id; // Buscar por ID
        } else if (!ID.equals("") && !titulo.equals("")) {
            opcion = ambos; // Buscar por ambos
        }

        switch (opcion) {
            case 0:
                JOptionPane.showMessageDialog(null, "[ ERROR AL BUSCAR ]\n Debe rellenar al menos uno de los campos");
                break;
            case 1:
                try {
                    Document filtro=new Document("ID",jTxtBuscarID.getText());
                    Document encontrar = collect.find(filtro).first();
                    if(encontrar != null){
                        String id1 = encontrar.getString("ID");
                        String genero = encontrar.getString("GÉNERO");
                        String autor = encontrar.getString("AUTOR");
                        String titulo3 = encontrar.getString("TÍTULO");
                        String editorial = encontrar.getString("EDITORIAL ");
                        String anioPublicacion = encontrar.getString("AÑO DE PUBLICACION");
                        String edicion = encontrar.getString("EDICION");
                        jLbMostrarTitulo.setText(titulo3);
                        jLbMostrarAutor.setText(autor);
                        jLbMostrarGenero.setText(genero);
                        jLbMostrarEditorial.setText(editorial);
                        jLbMostrarAnioPublicacion.setText(anioPublicacion);
                        jLbMostraEdicion.setText(edicion);
                    }else{
                        JOptionPane.showMessageDialog(null, "[ El LIBRO NO SE ENCONTRO EN LA BASE DE DATOS ]");
                    }
                } catch (MongoException e) {
                    JOptionPane.showMessageDialog(null, "ERROR A LA CONECTION A MONGODB");
                }
                break;
            case 2:
                try {
                    Document filtro=new Document("TÍTULO",jTxtBuscarTitulo.getText());
                    Document encontrar = collect.find(filtro).first();
                    if(encontrar != null){
                        String id1 = encontrar.getString("ID");
                        String genero = encontrar.getString("GÉNERO");
                        String autor = encontrar.getString("AUTOR");
                        String titulo3 = encontrar.getString("TÍTULO");
                        String editorial = encontrar.getString("EDITORIAL ");
                        String anioPublicacion = encontrar.getString("AÑO DE PUBLICACION");
                        String edicion = encontrar.getString("EDICION");
                        jLbMostrarTitulo.setText(titulo3);
                        jLbMostrarAutor.setText(autor);
                        jLbMostrarGenero.setText(genero);
                        jLbMostrarEditorial.setText(editorial);
                        jLbMostrarAnioPublicacion.setText(anioPublicacion);
                        jLbMostraEdicion.setText(edicion);
                    }else{
                        JOptionPane.showMessageDialog(null, "[ El LIBRO NO SE ENCONTRO EN LA BASE DE DATOS ]");
                    }
                } catch (MongoException e) {
                    JOptionPane.showMessageDialog(null, "ERROR A LA CONECTION A MONGODB");
                }
                break;
            case 3:
                try {
                    Document filtro=new Document("TÍTULO",jTxtBuscarTitulo.getText()).append("ID", jTxtBuscarID.getText());
                    Document encontrar = collect.find(filtro).first();
                    if(encontrar != null){
                        String id1 = encontrar.getString("ID");
                        String genero = encontrar.getString("GÉNERO");
                        String autor = encontrar.getString("AUTOR");
                        String titulo3 = encontrar.getString("TÍTULO");
                        String editorial = encontrar.getString("EDITORIAL ");
                        String anioPublicacion = encontrar.getString("AÑO DE PUBLICACION");
                        String edicion = encontrar.getString("EDICION");
                        jLbMostrarTitulo.setText(titulo3);
                        jLbMostrarAutor.setText(autor);
                        jLbMostrarGenero.setText(genero);
                        jLbMostrarEditorial.setText(editorial);
                        jLbMostrarAnioPublicacion.setText(anioPublicacion);
                        jLbMostraEdicion.setText(edicion);
                    }else{
                        JOptionPane.showMessageDialog(null, "[ El LIBRO NO SE ENCONTRO EN LA BASE DE DATOS ]");
                    }
                } catch (MongoException e) {
                    JOptionPane.showMessageDialog(null, "ERROR A LA CONECTION A MONGODB");
                }
                break;
        }
    }
    private void buscarUsuario(MongoCollection<Document> collect){
        int opcion=0,cedula1=1,nombre1=2,ambos=3;
        String cedula=jTxtCedulaBuscar.getText();
        String nombre=jTxtNombreBuscar.getText();
        if (cedula.equals("") && nombre.equals("")) {
            opcion = 0; // Ambos campos están vacíos
        } else if (cedula.equals("") && !nombre.equals("")) {
            opcion = nombre1; // Buscar por nombre
        } else if (!cedula.equals("") && nombre.equals("")) {
            opcion = cedula1; // Buscar por cedula
        } else if (!cedula.equals("") && !nombre.equals("")) {
            opcion = ambos; // Buscar por ambos
        }
        switch (opcion) {
            case 0:
                JOptionPane.showMessageDialog(null, "[ ERROR AL BUSCAR ]\n Debe rellenar al menos uno de los campos");
                break;
            case 1:
                try {
                    Document filtro=new Document("CEDULA",jTxtCedulaBuscar.getText());
                    Document encontrar = collect.find(filtro).first();
                    if(encontrar != null){
                        String id1 = encontrar.getString("ID");
                        String nombre2 = encontrar.getString("NOMBRE");
                        String apellido = encontrar.getString("APELLIDO");
                        String cedula2 = encontrar.getString("CEDULA");
                        String correo = encontrar.getString("CORREO");
                        String direcion = encontrar.getString("DIRECION");
                        String perfil = encontrar.getString("PERFIL");
                        jLbMostrarNombre.setText(nombre2);
                        jLbMostrarApellido.setText(apellido);
                        jLbMostrarCedula.setText(cedula2);
                        jLbMostrarCorreo.setText(correo);
                        jLbMostrarDirecion.setText(direcion);
                        jLbMostrarPerfil.setText(perfil);
                    }else{
                        JOptionPane.showMessageDialog(null, "[ El USUARIO NO SE ENCONTRO EN LA BASE DE DATOS ]");
                    }
                } catch (MongoException e) {
                    JOptionPane.showMessageDialog(null, "ERROR A LA CONECTION A MONGODB");
                }
                break;
            case 2:
                try {
                    Document filtro=new Document("NOMBRE",jTxtNombreBuscar.getText());
                    Document encontrar = collect.find(filtro).first();
                    if(encontrar != null){
                        String id1 = encontrar.getString("ID");
                        String nombre2 = encontrar.getString("NOMBRE");
                        String apellido = encontrar.getString("APELLIDO");
                        String cedula2 = encontrar.getString("CEDULA");
                        String correo = encontrar.getString("CORREO");
                        String direcion = encontrar.getString("DIRECION");
                        String perfil = encontrar.getString("PERFIL");
                        jLbMostrarNombre.setText(nombre2);
                        jLbMostrarApellido.setText(apellido);
                        jLbMostrarCedula.setText(cedula2);
                        jLbMostrarCorreo.setText(correo);
                        jLbMostrarDirecion.setText(direcion);
                        jLbMostrarPerfil.setText(perfil);
                    }else{
                        JOptionPane.showMessageDialog(null, "[ El USUARIO NO SE ENCONTRO EN LA BASE DE DATOS ]");
                    }
                } catch (MongoException e) {
                    JOptionPane.showMessageDialog(null, "ERROR A LA CONECTION A MONGODB");
                }
                break;
            case 3:
                try {
                    Document filtro=new Document("NOMBRE",jTxtNombreBuscar.getText()).append("CEDULA", jTxtCedulaBuscar.getText());
                    Document encontrar = collect.find(filtro).first();
                    if(encontrar != null){
                        String id1 = encontrar.getString("ID");
                        String nombre2 = encontrar.getString("NOMBRE");
                        String apellido = encontrar.getString("APELLIDO");
                        String cedula2 = encontrar.getString("CEDULA");
                        String correo = encontrar.getString("CORREO");
                        String direcion = encontrar.getString("DIRECION");
                        String perfil = encontrar.getString("PERFIL");
                        jLbMostrarNombre.setText(nombre2);
                        jLbMostrarApellido.setText(apellido);
                        jLbMostrarCedula.setText(cedula2);
                        jLbMostrarCorreo.setText(correo);
                        jLbMostrarDirecion.setText(direcion);
                        jLbMostrarPerfil.setText(perfil);
                    }else{
                        JOptionPane.showMessageDialog(null, "[ El USUARIO NO SE ENCONTRO EN LA BASE DE DATOS ]");
                    }
                } catch (MongoException e) {
                    JOptionPane.showMessageDialog(null, "ERROR A LA CONECTION A MONGODB");
                }
                break;
        }
    }
}
